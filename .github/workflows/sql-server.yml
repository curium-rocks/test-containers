name: 'SQL Server QA Container'
on:
  push:
    branches: ['main']
    paths:
      - "sql-server/**"
      - '.github/workflows/sql-server.yml'
env:
  # Use docker.io for Docker Hub if empty
  REGISTRY: ghcr.io
  # github.repository as <account>/<repo>
  IMAGE_NAME: curium-rocks/sql-server
jobs:
  publish-container:
    runs-on: 'ubuntu-latest'
    steps:
    - uses: actions/checkout@v2
    # Login against a Docker registry except on PR
      # https://github.com/docker/login-action
    - name: Log into registry ${{ env.REGISTRY }}
      if: github.event_name != 'pull_request'
      uses: docker/login-action@70b0f7898ed3f34d8d4c681d32cd545c43d9c17b
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    # Extract metadata (tags, labels) for Docker
    # https://github.com/docker/metadata-action
    - name: Extract Docker metadata
      id: meta
      uses: docker/metadata-action@09dffb9c1c47d41d5fd15d675fa8b10b8918da82
      with:
        images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
    # Build and push Docker image with Buildx (don't push on PR)
    # https://github.com/docker/build-push-action
    - name: Build and push Docker image
      uses: docker/build-push-action@04d5124fcbe023bf2106e1fea7c1b30717c7fc32
      with:
        context: sql-server
        push: ${{ github.event_name != 'pull_request' }}
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}